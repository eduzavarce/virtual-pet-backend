spring:
  application:
    name: pets
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:pets}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgrespassword}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
      pool-name: HikariCP
      max-lifetime: 2000000
      connection-timeout: 30000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: /

security:
  jwt:
    secret-key: ${JWT_SECRET:ce5e82685b90de63d1548054beab3b5e691d257c07799db1d073002d34b6ac09}
    expiration-time: ${JWT_EXPIRATION:3600000}

app:
  rabbitmq:
    exchange: ${RABBITMQ_EXCHANGE:domain-events}
    routing-prefix: ${RABBITMQ_ROUTING_PREFIX:events}
    queues:
      user-created-log: ${RABBITMQ_QUEUE_USER_CREATED_LOG:user-created-log.q}
      user-created-pets: ${RABBITMQ_QUEUE_USER_CREATED_PETS:user-created-pets.q}
  cors:
    allowed-origins:
      - ${CORS_ALLOWED_ORIGINS:http://localhost:5173}
    allowed-methods: [ GET,POST,PUT,DELETE,OPTIONS ]
    allowed-headers: [ "*" ]
    exposed-headers: [ ]
    allow-credentials: false

# Write application logs to a file (ready for Loki tailing)
logging:
  file:
    name: logs/pets-app.log
  charset:
    file: UTF-8
    console: UTF-8

# Enable Tomcat access logs in standard combined format
server:
  tomcat:
    basedir: .
    accesslog:
      enabled: true
      directory: logs
      prefix: access
      suffix: .log
      pattern: combined
      rotate: true
      max-days: 14
      request-attributes-enabled: true

# Expose actuator endpoints and enable HTTP exchanges recording
management:
  server:
    address: 0.0.0.0
    port: 8081
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers,httpexchanges,prometheus
  endpoint:
    prometheus:
      access: unrestricted
    httpexchanges:
      access: unrestricted
  httpexchanges:
    recording:
      enabled: true
